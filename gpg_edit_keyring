#!/bin/bash

#. /etc/sorcery/local/guruinfo


#---------------------------------------------------------------------
## process the params
#---------------------------------------------------------------------
function process_params() {
  while [[ "$1" == -* ]] 
    do
    case "$1" in
     "-d"|"--delete") mode="delete";  shift;;
     "-a"|"--add")   mode="add"; shift;;
     "-i"|"--import") mode="import"; shift;;
     "-s"|"--search") mode="search"; shift;;
     "-h"|"--help"|*) show_usage; exit 2 ;;
    esac
  done
}

#---------------------------------------------------------------------
## Shows usage
#---------------------------------------------------------------------
function show_usage() {
usage="Usage: $(basename $0) #keyID /path/\n
-d|--delete\t delete selected key from keyring\n
-a|--add\t add selcted key to keying\n
-i|--import\t import selected key to keyring\n
-s|--search\t search for key in grimoire\n
-h|--help\t show this help"

echo -e $usage
}

#---------------------------------------------------------------------
## @param keyID
## @param path to keyring
##
## Add key to selected keyring.
#---------------------------------------------------------------------
function gpg_add_key() {
  local key_to_add=$1
  local path_to_keyring=$2
  gpg --export-options export-minimal --export --armor $key_to_add |\
    gpg --no-default-keyring --keyring $path_to_keyring --import
}

#---------------------------------------------------------------------
## @param keyID
## @param path to keyring
##
## Remove key to selected keyring.
#---------------------------------------------------------------------
function gpg_del_key() {
  local key_to_delete=$1
  local path_to_keyring=$2
  gpg --batch --yes --no-default-keyring  --keyring $path_to_keyring \
      --delete-keys $key_to_delete
}

#---------------------------------------------------------------------
## @param keyID
## @param path to grimoire
##
## Search for keyID in all "*.gpg" files in grimoire path. 
#---------------------------------------------------------------------
function search_gpg_key() {
  local key_to_search=$1
  local path_to_grimoire=${2:-`pwd`}
  for gpg_keyring in \
  $(find $path_to_grimoire -mindepth 0 -maxdepth 3 -iname "*.gpg" -printf "%P\n")
  do
    first_found=$(gpg --batch --list-options show-keyring $gpg_keyring \
                  2> /dev/null |grep "$key_to_search"|head -n1)
    if [[ $first_found != "" ]];then
      echo "Key $key_to_search found in $gpg_keyring:"
      echo $first_found
    fi
    unset first_found
  done
}

#---------------------------------------------------------------------
## @param keyID
## @param path to keyring
##
## Import key to selected keyring.
#---------------------------------------------------------------------
function gpg_import_key() {
  local key_to_import=$1
  local path_to_keyring=$2
  gpg --import-options import-minimal --no-default-keyring --keyring $path_to_keyring \
      --recv-keys $key_to_import
}

#=========================
## start of code
#=========================
process_params "$@"
shift # need to find to transfer that shift from function proccess_params... untill then...

case "$mode" in
  add)    gpg_add_key $1 $2;;
  delete) gpg_del_key $1 $2;;
  import) gpg_import_key $1 $2;;
  search) search_gpg_key $1 $2;;
esac